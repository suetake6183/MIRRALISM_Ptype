# Task ID: 5
# Title: 会話構造化エンジン実装
# Status: pending
# Dependencies: 4
# Priority: high
# Description: 会話テキストを受け取り、Claude APIを使用して構造化する中核エンジンを実装する
# Details:
会話構造化エンジンの本体を実装する：

1. 構造化エンジンクラスの作成（src/engines/structuring_engine.py）
   - 入力テキスト前処理
   - Claude API呼び出し
   - 構造化結果の後処理
   - JSON/Markdown形式変換

2. 構造化ロジックの実装
   - 会話テキスト分析
   - 重要要素抽出（目標、課題、解決策、コスト、時間、パフォーマンス）
   - 構造化データ生成

3. 入力ソース対応
   - テキスト直接入力
   - ファイルアップロード（.txt, .md, .docx）
   - URL指定（ウェブページ内容取得）

4. 出力フォーマット
   - JSON形式（プログラム処理用）
   - Markdown形式（人間可読用）
   - 視覚的サマリー用データ構造

使用技術：
- Python 3.10以上
- anthropic 0.5.0（Claude API）
- beautifulsoup4 4.12.2（ウェブスクレイピング）
- python-docx 0.8.11（Word文書処理）
- markdown 3.4.3（Markdown生成）
- pydantic 2.4.2（データ検証）

# Test Strategy:
1. 各入力ソースからの構造化テスト
   - テキスト入力テスト
   - ファイルアップロードテスト
   - URL指定テスト
2. 構造化精度テスト
   - サンプルデータセットを使用した精度評価
   - 要素抽出の網羅性確認
3. 出力フォーマットテスト
   - JSON形式の検証
   - Markdown形式の検証
4. エラーケースのテスト
   - 不完全な入力
   - 構造化困難なテキスト
5. パフォーマンステスト（処理時間3秒以内）
